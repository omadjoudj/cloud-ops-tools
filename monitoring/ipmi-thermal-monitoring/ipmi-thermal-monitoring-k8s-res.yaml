## Custom monitoring for thermal and fan using IPMI
## A: ~omadjoudj
##
--- 
apiVersion: v1
kind: Namespace
metadata:
  name: custom-thermal-mon

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: telegraf-thermal-mon-config
  namespace: custom-thermal-mon
data:
  telegraf.conf: |2
    [global_tags]
    [agent]
      interval = "160s"
      round_interval = false
      metric_batch_size = 1000
      metric_buffer_limit = 10000
      collection_jitter = "20s"
    [[inputs.exec]]
      commands = ["/tmp/collect_thermal_metrics.sh"]
      data_format = "influx"
      timeout = "120s"
    [[outputs.prometheus_client]]
      expiration_interval = "10m"
      listen = ":80"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: telegraf-thermal-script
  namespace: custom-thermal-mon
data:
  collect_thermal_metrics.sh: |
    #!/bin/sh
    echo ipmi_thermal_metrics_inlet_degrees value=$(ipmitool -c sdr list | grep 01-Inlet | cut -d, -f2)
    ipmitool -c sdr list | grep -i DutyCycle | cut -d, -f1,2 | tr ' ,' '_ '  | tr '[:upper:]' '[:lower:]' | while read fan speed; do echo ipmi_thermal_metrics_${fan}_speed_percent value=$speed ; done


---
# apiVersion: v1
# kind: Service
# metadata:
#   name: telegraf-thermal
#   namespace: custom-thermal-mon
#   labels:
#     application: telegraf-thermal
# spec:
#   ports:
#   - name: prometheus-client
#     protocol: TCP
#     port: 9126
#     targetPort: 9126
#   selector:
#     application: telegraf-thermal
#   type: ClusterIP
#   sessionAffinity: None

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: telegraf-thermal
  namespace: custom-thermal-mon
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      application: telegraf-thermal
  template:
    metadata:
      labels:
        application: telegraf-thermal
    spec:
      shareProcessNamespace: true
      containers:
      - name: telegraf-checker
        #command: ["/bin/sh"]
        #args: ["-c", "sleep infinity"]
        command: ["/usr/bin/telegraf"]
        args: ["--config", "/etc/telegraf/telegraf.conf", "--config-directory", "/etc/telegraf/telegraf.d"]
        #image: 127.0.0.1:44301/stacklight/telegraf:v1.9.1-20240403023008
        image: mirantis.azurecr.io/stacklight/telegraf:1-20240426131156
        imagePullPolicy: IfNotPresent
        securityContext:
          # IPMI reading requires root
          privileged: true
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/telegraf
          name: telegraf-thermal-mon-config
        - mountPath: /tmp/collect_thermal_metrics.sh
          name: telegraf-thermal-script
          subPath: collect_thermal_metrics.sh
        - mountPath: /lib
          name: lib
        - mountPath: /bin/bash
          name: bin-bash
        - mountPath: /bin/sh
          name: bin-sh
        - mountPath: /bin/grep
          name: bin-grep
        - mountPath: /bin/cut
          name: bin-cut
        - mountPath: /bin/tr
          name: bin-tr
        - mountPath: /usr/bin/ipmitool
          name: usr-bin-ipmitool
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
      #nodeSelector:
      volumes:
      - hostPath:
          path: /lib
          type: "Directory"
        name: lib
      - hostPath:
          path: /usr/bin/ipmitool
          type: "File"
        name: usr-bin-ipmitool
      - hostPath:
          path: /bin/bash
          type: "File"
        name: bin-bash
      - hostPath:
          path: /bin/sh
          type: "File"
        name: bin-sh
      - hostPath:
          path: /bin/cut
          type: "File"
        name: bin-cut
      - hostPath:
          path: /bin/grep
          type: "File"
        name: bin-grep
      - hostPath:
          path: /bin/tr
          type: "File"
        name: bin-tr
      - name: telegraf-thermal-mon-config
        configMap:
          defaultMode: 0420
          name: telegraf-thermal-mon-config
      - name: telegraf-thermal-script
        configMap:
          defaultMode: 0755
          name: telegraf-thermal-script
